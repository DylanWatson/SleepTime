<Page
    x:Name="pageRoot"
    x:Class="HelloWorld.Introduction"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:HelloWorld"
    xmlns:common="using:HelloWorld.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Introduction to Our App</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Margin="39,59,39,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                        VerticalAlignment="Top"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1" 
                        IsHitTestVisible="false" TextWrapping="NoWrap" HorizontalAlignment="Center"  VerticalAlignment="Bottom" Margin="0,0,30,40"/>
        </Grid>
            
            <StackPanel Grid.Row="1" Margin="120,30,0,0">
        <TextBlock Text="Welcome to Sleep Time!" FontSize="48" TextAlignment="Center" Padding="0,0,0,30"/>
        <TextBlock TextWrapping="Wrap" FontSize="32" FontStyle="Italic" Padding="0,0,0,50">
                The purpose of Sleep Time is to test how aware you are at a given time. This goal is achieved by starting with a
                calibration stage, which should be done when you feel fresh and relaxed. The test consists of a few different
                easy challenges, such as simple math, finding patterns among words and pictures, and some logic based questions.
                The test is planned to take at most one minute. After calibration is done, simply take the test again when you feel 
                tired and want to find out if productivity will be minimal if you keep working. Upon analyzing test results, the app
                will then let you know whether you should keep working, or go to bed. Sleep Time is perfect to use when you are at a
                Hackathon, and effectively using time is of essence!
        </TextBlock>
            <Button Content="Back To Main Page" HorizontalAlignment="Center" FontSize="40" Click="Button_Click" />
        </StackPanel>
    </Grid>
</Page>
